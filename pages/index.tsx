import Head from 'next/head';
import AppHeader from '../src/components/Items/AppHeader';
import { Box, Container, CssBaseline, Divider } from '@mui/material';
import Campaign from '../src/components/Home/Campaign';
import axios from '../src/config/axios';
import { Fragment, useEffect, useState } from 'react';
import FeaturedServices from '../src/components/Home/FeaturedServices';
import Categories from '../src/components/Items/Categories';
import Suppliers from '../src/components/Home/Suppliers';
import Promos from '../src/components/Home/Promos';
import Products from '../src/components/Items/Products';
import { newProducts, useInit } from '../src/components/constants';
import Auth from '../src/components/Items/Auth';
import {
  featuredServiceData,
  useGetSelectedCat,
} from '../src/components/Home/constants';
import { useSelector } from 'react-redux';
import ProductsByCategory from '../src/components/Home/ProductsByCategory';
import NearestMarket from '../src/components/Items/NearestMarket';
import { useGetCampaigns } from '../src/Requests/HomeRequests';
import { rootReducerI } from '../src/redux/reducers';
import {
  useGetProducts,
  useGetSuppliers,
} from '../src/Requests/GlobalRequests';
import MarketDetails from '../src/components/Items/MarketDetails';

export default function Home() {
  useInit();
  const { appState } = useSelector((state: rootReducerI) => state);
  const [nearestMarket, setNearestMarket] = useState<{ [key: string]: any }>(
    {},
  );
  const { campaigns } = useGetCampaigns(nearestMarket.ckode_mitra);
  const { suppliers } = useGetSuppliers({
    marketCode: nearestMarket.ckode_mitra,
  });
  const { products: promotedProducts } = useGetProducts({
    marketCode: nearestMarket.ckode_mitra,
    productType: 'promo',
  });
  const { selectedCat } = useGetSelectedCat();
  const { products: productsByCategory } = useGetProducts({
    marketCode: nearestMarket.ckode_mitra,
    productType: 'category',
    categoryId: Number(selectedCat.id),
  });
  const [currentProductsPage, setCurrentProductPage] = useState<number>(1);
  const {
    products,
    setProducts,
    lastProductsPage,
    isProductsLoading,
    setIsProductsLoading,
  } = useGetProducts({ marketCode: nearestMarket.ckode_mitra });

  const onShowMoreProductBtnClicked = () => {
    const nextProductPage = currentProductsPage + 1;
    if (!isProductsLoading && nextProductPage <= lastProductsPage) {
      setIsProductsLoading(true);
      axios()
        .post(`/market/product?page=${nextProductPage}`, {
          limit: 12,
          type: 'all',
          marketId: nearestMarket.ckode_mitra,
        })
        .then(({ data }) => {
          setProducts(prevProducts => [
            ...prevProducts,
            ...newProducts(data.result.data),
          ]);
          setCurrentProductPage(nextProductPage);
        })
        .finally(() => setIsProductsLoading(false));
    }
  };

  useEffect(() => {
    setNearestMarket(appState.nearestMarket);
  }, [appState.nearestMarket]);

  return (
    <Fragment>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <title>KerPas</title>
      </Head>
      <CssBaseline />
      <AppHeader />
      <Container maxWidth={'lg'} sx={{ px: '0!important', overflow: 'hidden' }}>
        <Box py={1} mt={10} mb={8}>
          <Campaign data={campaigns} />
          <FeaturedServices data={featuredServiceData} />
          <Categories />
          <Divider />
          <NearestMarket />
          <Divider />
          <Promos data={promotedProducts} />
          <Divider />
          <ProductsByCategory
            category={selectedCat}
            data={productsByCategory}
          />
          <Suppliers data={suppliers} />
          <Products
            name={'Jelajah Pasar'}
            data={products}
            onShowMoreBtnClicked={onShowMoreProductBtnClicked}
            isLoading={isProductsLoading}
            isLastProductReached={currentProductsPage + 1 > lastProductsPage}
          />
        </Box>
      </Container>
      <Auth />
      <MarketDetails />
    </Fragment>
  );
}
